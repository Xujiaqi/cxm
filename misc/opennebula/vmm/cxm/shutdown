#!/bin/bash 

# vmm/cxm - OpenNebula virtual machine manager for cxm
# Copyleft 2012 - Nicolas AGIUS <nicolas.agius@lps-it.fr>
#
# Some part of code are inspired from OpenNebula 
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)

###########################################################################
#
# This file is part of cxm.
#
# cxm is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###########################################################################

DRIVER_PATH=$(dirname $0)

source $DRIVER_PATH/../../scripts_common.sh
source $DRIVER_PATH/../../cxmrc

VM_NAME=$1
VM_ID=$3

TIMEOUT=${SHUTDOWN_TIMEOUT:-120}

function soft_shutdown
{
	log "Shutting down $VM_NAME ..."
	exec_and_log "sudo xm shutdown $VM_NAME -w" "Could not shutdown $VM_NAME"
}

function hard_shutdown
{
	log "Timeout: killing $VM_NAME"
	exec_and_log "sudo xm destroy $VM_NAME" "Could not destroy $VM_NAME"
}


if is_in_cluster; then
	# Timeout directly handled by cxm
	exec_and_log "sudo HOME=/root cxm shutdown $VM_NAME" "Could not shutdown $VM_NAME"
else
	# Try to softly shutdown the vm
	soft_shutdown &
	CHILDPID=$!

	# Engage timeout
	trap hard_shutdown SIGALRM
	(sleep $TIMEOUT; kill -ALRM $$)&
	ALARMPID=$!

	# Wait for clean shutdown
	wait $CHILDPID

	# Tidy up the alarm
	kill $ALARMPID &>/dev/null
fi

exit 0

# vim: ts=4:sw=4:ai
